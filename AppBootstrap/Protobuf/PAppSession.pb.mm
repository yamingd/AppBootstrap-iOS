// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PAppSession.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PAppSession.pb.hh"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PAppSession_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PAppSession_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PAppSession_2eproto() {
  protobuf_AddDesc_PAppSession_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PAppSession.proto");
  GOOGLE_CHECK(file != NULL);
  PAppSession_descriptor_ = file->message_type(0);
  static const int PAppSession_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, realname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, secret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, signindate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, profileimageurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, appname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, devicename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, devicescreensize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, osname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, osversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, packageversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, packagename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, deviceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, devicetoken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, apnsenabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, latesappvers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, localeidentifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, cityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, userkind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, userdemo_),
  };
  PAppSession_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PAppSession_descriptor_,
      PAppSession::default_instance_,
      PAppSession_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppSession, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PAppSession));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PAppSession_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PAppSession_descriptor_, &PAppSession::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PAppSession_2eproto() {
  delete PAppSession::default_instance_;
  delete PAppSession_reflection_;
}

void protobuf_AddDesc_PAppSession_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021PAppSession.proto\"\345\003\n\013PAppSession\022\021\n\ts"
    "essionId\030\001 \001(\t\022\020\n\010realName\030\002 \001(\t\022\020\n\010user"
    "Name\030\003 \001(\t\022\016\n\006userId\030\004 \001(\003\022\016\n\006secret\030\005 \001"
    "(\t\022\022\n\nsigninDate\030\006 \001(\t\022\027\n\017profileImageUr"
    "l\030\007 \001(\t\022\017\n\007appName\030\010 \001(\t\022\022\n\ndeviceName\030\t"
    " \001(\t\022\030\n\020deviceScreenSize\030\n \001(\t\022\016\n\006osName"
    "\030\013 \001(\t\022\021\n\tosVersion\030\014 \001(\t\022\026\n\016packageVers"
    "ion\030\r \001(\t\022\023\n\013packageName\030\016 \001(\t\022\020\n\010device"
    "Id\030\017 \001(\t\022\023\n\013deviceToken\030\020 \001(\t\022\023\n\013apnsEna"
    "bled\030\021 \001(\005\022\024\n\014latesAppVers\030\022 \001(\t\022\030\n\020loca"
    "leIdentifier\030\023 \001(\t\022\020\n\010latitude\030\024 \001(\002\022\021\n\t"
    "longitude\030\025 \001(\002\022\016\n\006cityId\030\026 \001(\005\022\020\n\010userK"
    "ind\030\027 \001(\005\022\020\n\010userDemo\030\030 \001(\005B+\n\025com.argo."
    "sdk.protobufB\020PAppSessionProtoP\001", 552);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PAppSession.proto", &protobuf_RegisterTypes);
  PAppSession::default_instance_ = new PAppSession();
  PAppSession::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PAppSession_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PAppSession_2eproto {
  StaticDescriptorInitializer_PAppSession_2eproto() {
    protobuf_AddDesc_PAppSession_2eproto();
  }
} static_descriptor_initializer_PAppSession_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PAppSession::kSessionIdFieldNumber;
const int PAppSession::kRealNameFieldNumber;
const int PAppSession::kUserNameFieldNumber;
const int PAppSession::kUserIdFieldNumber;
const int PAppSession::kSecretFieldNumber;
const int PAppSession::kSigninDateFieldNumber;
const int PAppSession::kProfileImageUrlFieldNumber;
const int PAppSession::kAppNameFieldNumber;
const int PAppSession::kDeviceNameFieldNumber;
const int PAppSession::kDeviceScreenSizeFieldNumber;
const int PAppSession::kOsNameFieldNumber;
const int PAppSession::kOsVersionFieldNumber;
const int PAppSession::kPackageVersionFieldNumber;
const int PAppSession::kPackageNameFieldNumber;
const int PAppSession::kDeviceIdFieldNumber;
const int PAppSession::kDeviceTokenFieldNumber;
const int PAppSession::kApnsEnabledFieldNumber;
const int PAppSession::kLatesAppVersFieldNumber;
const int PAppSession::kLocaleIdentifierFieldNumber;
const int PAppSession::kLatitudeFieldNumber;
const int PAppSession::kLongitudeFieldNumber;
const int PAppSession::kCityIdFieldNumber;
const int PAppSession::kUserKindFieldNumber;
const int PAppSession::kUserDemoFieldNumber;
#endif  // !_MSC_VER

PAppSession::PAppSession()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PAppSession::InitAsDefaultInstance() {
}

PAppSession::PAppSession(const PAppSession& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PAppSession::SharedCtor() {
  _cached_size_ = 0;
  sessionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  realname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  userid_ = GOOGLE_LONGLONG(0);
  secret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  signindate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  profileimageurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  appname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  devicename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  devicescreensize_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  osname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  osversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  packageversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  packagename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  devicetoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apnsenabled_ = 0;
  latesappvers_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localeidentifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  latitude_ = 0;
  longitude_ = 0;
  cityid_ = 0;
  userkind_ = 0;
  userdemo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PAppSession::~PAppSession() {
  SharedDtor();
}

void PAppSession::SharedDtor() {
  if (sessionid_ != &::google::protobuf::internal::kEmptyString) {
    delete sessionid_;
  }
  if (realname_ != &::google::protobuf::internal::kEmptyString) {
    delete realname_;
  }
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (secret_ != &::google::protobuf::internal::kEmptyString) {
    delete secret_;
  }
  if (signindate_ != &::google::protobuf::internal::kEmptyString) {
    delete signindate_;
  }
  if (profileimageurl_ != &::google::protobuf::internal::kEmptyString) {
    delete profileimageurl_;
  }
  if (appname_ != &::google::protobuf::internal::kEmptyString) {
    delete appname_;
  }
  if (devicename_ != &::google::protobuf::internal::kEmptyString) {
    delete devicename_;
  }
  if (devicescreensize_ != &::google::protobuf::internal::kEmptyString) {
    delete devicescreensize_;
  }
  if (osname_ != &::google::protobuf::internal::kEmptyString) {
    delete osname_;
  }
  if (osversion_ != &::google::protobuf::internal::kEmptyString) {
    delete osversion_;
  }
  if (packageversion_ != &::google::protobuf::internal::kEmptyString) {
    delete packageversion_;
  }
  if (packagename_ != &::google::protobuf::internal::kEmptyString) {
    delete packagename_;
  }
  if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceid_;
  }
  if (devicetoken_ != &::google::protobuf::internal::kEmptyString) {
    delete devicetoken_;
  }
  if (latesappvers_ != &::google::protobuf::internal::kEmptyString) {
    delete latesappvers_;
  }
  if (localeidentifier_ != &::google::protobuf::internal::kEmptyString) {
    delete localeidentifier_;
  }
  if (this != default_instance_) {
  }
}

void PAppSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PAppSession::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PAppSession_descriptor_;
}

const PAppSession& PAppSession::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PAppSession_2eproto();
  return *default_instance_;
}

PAppSession* PAppSession::default_instance_ = NULL;

PAppSession* PAppSession::New() const {
  return new PAppSession;
}

void PAppSession::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sessionid()) {
      if (sessionid_ != &::google::protobuf::internal::kEmptyString) {
        sessionid_->clear();
      }
    }
    if (has_realname()) {
      if (realname_ != &::google::protobuf::internal::kEmptyString) {
        realname_->clear();
      }
    }
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::kEmptyString) {
        username_->clear();
      }
    }
    userid_ = GOOGLE_LONGLONG(0);
    if (has_secret()) {
      if (secret_ != &::google::protobuf::internal::kEmptyString) {
        secret_->clear();
      }
    }
    if (has_signindate()) {
      if (signindate_ != &::google::protobuf::internal::kEmptyString) {
        signindate_->clear();
      }
    }
    if (has_profileimageurl()) {
      if (profileimageurl_ != &::google::protobuf::internal::kEmptyString) {
        profileimageurl_->clear();
      }
    }
    if (has_appname()) {
      if (appname_ != &::google::protobuf::internal::kEmptyString) {
        appname_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_devicename()) {
      if (devicename_ != &::google::protobuf::internal::kEmptyString) {
        devicename_->clear();
      }
    }
    if (has_devicescreensize()) {
      if (devicescreensize_ != &::google::protobuf::internal::kEmptyString) {
        devicescreensize_->clear();
      }
    }
    if (has_osname()) {
      if (osname_ != &::google::protobuf::internal::kEmptyString) {
        osname_->clear();
      }
    }
    if (has_osversion()) {
      if (osversion_ != &::google::protobuf::internal::kEmptyString) {
        osversion_->clear();
      }
    }
    if (has_packageversion()) {
      if (packageversion_ != &::google::protobuf::internal::kEmptyString) {
        packageversion_->clear();
      }
    }
    if (has_packagename()) {
      if (packagename_ != &::google::protobuf::internal::kEmptyString) {
        packagename_->clear();
      }
    }
    if (has_deviceid()) {
      if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
        deviceid_->clear();
      }
    }
    if (has_devicetoken()) {
      if (devicetoken_ != &::google::protobuf::internal::kEmptyString) {
        devicetoken_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    apnsenabled_ = 0;
    if (has_latesappvers()) {
      if (latesappvers_ != &::google::protobuf::internal::kEmptyString) {
        latesappvers_->clear();
      }
    }
    if (has_localeidentifier()) {
      if (localeidentifier_ != &::google::protobuf::internal::kEmptyString) {
        localeidentifier_->clear();
      }
    }
    latitude_ = 0;
    longitude_ = 0;
    cityid_ = 0;
    userkind_ = 0;
    userdemo_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PAppSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sessionId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_realName;
        break;
      }

      // optional string realName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_realName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_userName;
        break;
      }

      // optional string userName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_userId;
        break;
      }

      // optional int64 userId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_secret;
        break;
      }

      // optional string secret = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secret:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secret().data(), this->secret().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_signinDate;
        break;
      }

      // optional string signinDate = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_signinDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signindate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->signindate().data(), this->signindate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_profileImageUrl;
        break;
      }

      // optional string profileImageUrl = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_profileImageUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profileimageurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->profileimageurl().data(), this->profileimageurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_appName;
        break;
      }

      // optional string appName = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_deviceName;
        break;
      }

      // optional string deviceName = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->devicename().data(), this->devicename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_deviceScreenSize;
        break;
      }

      // optional string deviceScreenSize = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceScreenSize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicescreensize()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->devicescreensize().data(), this->devicescreensize().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_osName;
        break;
      }

      // optional string osName = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_osName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->osname().data(), this->osname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_osVersion;
        break;
      }

      // optional string osVersion = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_osVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->osversion().data(), this->osversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_packageVersion;
        break;
      }

      // optional string packageVersion = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_packageVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packageversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->packageversion().data(), this->packageversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_packageName;
        break;
      }

      // optional string packageName = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_packageName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_deviceId;
        break;
      }

      // optional string deviceId = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_deviceToken;
        break;
      }

      // optional string deviceToken = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceToken:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicetoken()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->devicetoken().data(), this->devicetoken().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_apnsEnabled;
        break;
      }

      // optional int32 apnsEnabled = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_apnsEnabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apnsenabled_)));
          set_has_apnsenabled();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_latesAppVers;
        break;
      }

      // optional string latesAppVers = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_latesAppVers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latesappvers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->latesappvers().data(), this->latesappvers().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_localeIdentifier;
        break;
      }

      // optional string localeIdentifier = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_localeIdentifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localeidentifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localeidentifier().data(), this->localeidentifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(165)) goto parse_latitude;
        break;
      }

      // optional float latitude = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
          set_has_latitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(173)) goto parse_longitude;
        break;
      }

      // optional float longitude = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
          set_has_longitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_cityId;
        break;
      }

      // optional int32 cityId = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cityId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cityid_)));
          set_has_cityid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_userKind;
        break;
      }

      // optional int32 userKind = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_userKind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userkind_)));
          set_has_userkind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_userDemo;
        break;
      }

      // optional int32 userDemo = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_userDemo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userdemo_)));
          set_has_userdemo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PAppSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string sessionId = 1;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->sessionid(), output);
  }

  // optional string realName = 2;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->realname(), output);
  }

  // optional string userName = 3;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->username(), output);
  }

  // optional int64 userId = 4;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->userid(), output);
  }

  // optional string secret = 5;
  if (has_secret()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secret().data(), this->secret().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->secret(), output);
  }

  // optional string signinDate = 6;
  if (has_signindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->signindate().data(), this->signindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->signindate(), output);
  }

  // optional string profileImageUrl = 7;
  if (has_profileimageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->profileimageurl().data(), this->profileimageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->profileimageurl(), output);
  }

  // optional string appName = 8;
  if (has_appname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->appname(), output);
  }

  // optional string deviceName = 9;
  if (has_devicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicename().data(), this->devicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->devicename(), output);
  }

  // optional string deviceScreenSize = 10;
  if (has_devicescreensize()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicescreensize().data(), this->devicescreensize().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->devicescreensize(), output);
  }

  // optional string osName = 11;
  if (has_osname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->osname().data(), this->osname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->osname(), output);
  }

  // optional string osVersion = 12;
  if (has_osversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->osversion().data(), this->osversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->osversion(), output);
  }

  // optional string packageVersion = 13;
  if (has_packageversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packageversion().data(), this->packageversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->packageversion(), output);
  }

  // optional string packageName = 14;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->packagename(), output);
  }

  // optional string deviceId = 15;
  if (has_deviceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->deviceid(), output);
  }

  // optional string deviceToken = 16;
  if (has_devicetoken()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicetoken().data(), this->devicetoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->devicetoken(), output);
  }

  // optional int32 apnsEnabled = 17;
  if (has_apnsenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->apnsenabled(), output);
  }

  // optional string latesAppVers = 18;
  if (has_latesappvers()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->latesappvers().data(), this->latesappvers().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->latesappvers(), output);
  }

  // optional string localeIdentifier = 19;
  if (has_localeidentifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localeidentifier().data(), this->localeidentifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->localeidentifier(), output);
  }

  // optional float latitude = 20;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->latitude(), output);
  }

  // optional float longitude = 21;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->longitude(), output);
  }

  // optional int32 cityId = 22;
  if (has_cityid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->cityid(), output);
  }

  // optional int32 userKind = 23;
  if (has_userkind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->userkind(), output);
  }

  // optional int32 userDemo = 24;
  if (has_userdemo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->userdemo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PAppSession::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string sessionId = 1;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // optional string realName = 2;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->realname(), target);
  }

  // optional string userName = 3;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // optional int64 userId = 4;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->userid(), target);
  }

  // optional string secret = 5;
  if (has_secret()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secret().data(), this->secret().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->secret(), target);
  }

  // optional string signinDate = 6;
  if (has_signindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->signindate().data(), this->signindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->signindate(), target);
  }

  // optional string profileImageUrl = 7;
  if (has_profileimageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->profileimageurl().data(), this->profileimageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->profileimageurl(), target);
  }

  // optional string appName = 8;
  if (has_appname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->appname(), target);
  }

  // optional string deviceName = 9;
  if (has_devicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicename().data(), this->devicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->devicename(), target);
  }

  // optional string deviceScreenSize = 10;
  if (has_devicescreensize()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicescreensize().data(), this->devicescreensize().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->devicescreensize(), target);
  }

  // optional string osName = 11;
  if (has_osname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->osname().data(), this->osname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->osname(), target);
  }

  // optional string osVersion = 12;
  if (has_osversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->osversion().data(), this->osversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->osversion(), target);
  }

  // optional string packageVersion = 13;
  if (has_packageversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packageversion().data(), this->packageversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->packageversion(), target);
  }

  // optional string packageName = 14;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->packagename(), target);
  }

  // optional string deviceId = 15;
  if (has_deviceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->deviceid(), target);
  }

  // optional string deviceToken = 16;
  if (has_devicetoken()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicetoken().data(), this->devicetoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->devicetoken(), target);
  }

  // optional int32 apnsEnabled = 17;
  if (has_apnsenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->apnsenabled(), target);
  }

  // optional string latesAppVers = 18;
  if (has_latesappvers()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->latesappvers().data(), this->latesappvers().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->latesappvers(), target);
  }

  // optional string localeIdentifier = 19;
  if (has_localeidentifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localeidentifier().data(), this->localeidentifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->localeidentifier(), target);
  }

  // optional float latitude = 20;
  if (has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->latitude(), target);
  }

  // optional float longitude = 21;
  if (has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->longitude(), target);
  }

  // optional int32 cityId = 22;
  if (has_cityid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->cityid(), target);
  }

  // optional int32 userKind = 23;
  if (has_userkind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->userkind(), target);
  }

  // optional int32 userDemo = 24;
  if (has_userdemo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->userdemo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PAppSession::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sessionId = 1;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

    // optional string realName = 2;
    if (has_realname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realname());
    }

    // optional string userName = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional int64 userId = 4;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->userid());
    }

    // optional string secret = 5;
    if (has_secret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secret());
    }

    // optional string signinDate = 6;
    if (has_signindate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signindate());
    }

    // optional string profileImageUrl = 7;
    if (has_profileimageurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->profileimageurl());
    }

    // optional string appName = 8;
    if (has_appname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string deviceName = 9;
    if (has_devicename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicename());
    }

    // optional string deviceScreenSize = 10;
    if (has_devicescreensize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicescreensize());
    }

    // optional string osName = 11;
    if (has_osname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->osname());
    }

    // optional string osVersion = 12;
    if (has_osversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->osversion());
    }

    // optional string packageVersion = 13;
    if (has_packageversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packageversion());
    }

    // optional string packageName = 14;
    if (has_packagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packagename());
    }

    // optional string deviceId = 15;
    if (has_deviceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deviceid());
    }

    // optional string deviceToken = 16;
    if (has_devicetoken()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicetoken());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 apnsEnabled = 17;
    if (has_apnsenabled()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->apnsenabled());
    }

    // optional string latesAppVers = 18;
    if (has_latesappvers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->latesappvers());
    }

    // optional string localeIdentifier = 19;
    if (has_localeidentifier()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localeidentifier());
    }

    // optional float latitude = 20;
    if (has_latitude()) {
      total_size += 2 + 4;
    }

    // optional float longitude = 21;
    if (has_longitude()) {
      total_size += 2 + 4;
    }

    // optional int32 cityId = 22;
    if (has_cityid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cityid());
    }

    // optional int32 userKind = 23;
    if (has_userkind()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userkind());
    }

    // optional int32 userDemo = 24;
    if (has_userdemo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userdemo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PAppSession::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PAppSession* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PAppSession*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PAppSession::MergeFrom(const PAppSession& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sessionid()) {
      set_sessionid(from.sessionid());
    }
    if (from.has_realname()) {
      set_realname(from.realname());
    }
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_secret()) {
      set_secret(from.secret());
    }
    if (from.has_signindate()) {
      set_signindate(from.signindate());
    }
    if (from.has_profileimageurl()) {
      set_profileimageurl(from.profileimageurl());
    }
    if (from.has_appname()) {
      set_appname(from.appname());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_devicename()) {
      set_devicename(from.devicename());
    }
    if (from.has_devicescreensize()) {
      set_devicescreensize(from.devicescreensize());
    }
    if (from.has_osname()) {
      set_osname(from.osname());
    }
    if (from.has_osversion()) {
      set_osversion(from.osversion());
    }
    if (from.has_packageversion()) {
      set_packageversion(from.packageversion());
    }
    if (from.has_packagename()) {
      set_packagename(from.packagename());
    }
    if (from.has_deviceid()) {
      set_deviceid(from.deviceid());
    }
    if (from.has_devicetoken()) {
      set_devicetoken(from.devicetoken());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_apnsenabled()) {
      set_apnsenabled(from.apnsenabled());
    }
    if (from.has_latesappvers()) {
      set_latesappvers(from.latesappvers());
    }
    if (from.has_localeidentifier()) {
      set_localeidentifier(from.localeidentifier());
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
    if (from.has_cityid()) {
      set_cityid(from.cityid());
    }
    if (from.has_userkind()) {
      set_userkind(from.userkind());
    }
    if (from.has_userdemo()) {
      set_userdemo(from.userdemo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PAppSession::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PAppSession::CopyFrom(const PAppSession& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PAppSession::IsInitialized() const {

  return true;
}

void PAppSession::Swap(PAppSession* other) {
  if (other != this) {
    std::swap(sessionid_, other->sessionid_);
    std::swap(realname_, other->realname_);
    std::swap(username_, other->username_);
    std::swap(userid_, other->userid_);
    std::swap(secret_, other->secret_);
    std::swap(signindate_, other->signindate_);
    std::swap(profileimageurl_, other->profileimageurl_);
    std::swap(appname_, other->appname_);
    std::swap(devicename_, other->devicename_);
    std::swap(devicescreensize_, other->devicescreensize_);
    std::swap(osname_, other->osname_);
    std::swap(osversion_, other->osversion_);
    std::swap(packageversion_, other->packageversion_);
    std::swap(packagename_, other->packagename_);
    std::swap(deviceid_, other->deviceid_);
    std::swap(devicetoken_, other->devicetoken_);
    std::swap(apnsenabled_, other->apnsenabled_);
    std::swap(latesappvers_, other->latesappvers_);
    std::swap(localeidentifier_, other->localeidentifier_);
    std::swap(latitude_, other->latitude_);
    std::swap(longitude_, other->longitude_);
    std::swap(cityid_, other->cityid_);
    std::swap(userkind_, other->userkind_);
    std::swap(userdemo_, other->userdemo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PAppSession::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PAppSession_descriptor_;
  metadata.reflection = PAppSession_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
